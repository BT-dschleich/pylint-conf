 pylint_conf.cfg Raw
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
# lint Python modules using external checkers.
# 
# This is the main checker controlling the other ones and the reports
# generation. It is itself both a raw checker and an astng checker in order
# to:
# * handle message activation / deactivation at the module level
# * handle some basic but necessary stats'data (number of classes, methods...)
# 
[MASTER]
 
# Specify a configuration file.
#rcfile=
 
# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
#init-hook=
 
# Profiled execution.
profile=no
 
# Add <file or directory> to the black list. It should be a base name, not a
# path. You may set this option multiple times.
ignore=CVS
 
# Pickle collected data for later comparisons.
persistent=yes
 
# Set the cache size for astng objects.
cache-size=500
 
# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=
 
 
[MESSAGES CONTROL]
 
# Enable only checker(s) with the given id(s). This option conflicts with the
# disable-checker option
#enable-checker=
 
# Enable all checker(s) except those with the given id(s). This option
# conflicts with the enable-checker option
#disable-checker=
 
# Enable all messages in the listed categories.
#enable-msg-cat=
 
# Disable all messages in the listed categories.
#disable-msg-cat=
 
# Enable the message(s) with the given id(s).
#enable-msg=
 
# Disable the message(s) with the given id(s).
disable-msg=I0011,R0903,C0111,W0612
 
 
[REPORTS]
 
# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html
output-format=text
 
# Include message's id in output
include-ids=yes
 
# Put messages in a separate file for each module / package specified on the
# command line instead of printing them on stdout. Reports (if any) will be
# written in a file name "pylint_global.[txt|html]".
files-output=no
 
# Tells wether to display a full report or only the messages
reports=yes
 
# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectivly contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (R0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)
 
# Add a comment according to your evaluation note. This is used by the global
# evaluation report (R0004).
comment=no
 
# Enable the report(s) with the given id(s).
#enable-report=
 
# Disable the report(s) with the given id(s).
#disable-report=
 
 
# checks for
# * unused variables / imports
# * undefined variables
# * redefinition of variable from builtins or from an outer scope
# * use of variable before assigment
# 
[VARIABLES]
 
# Tells wether we should check for unused import in __init__ files.
init-import=no
 
# A regular expression matching names used for dummy variables (i.e. not used).
dummy-variables-rgx=_|dummy
 
# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=
 
 
# try to find bugs in the code using type inference
# 
[TYPECHECK]
 
# Tells wether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes
 
# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamicaly set).
ignored-classes=SQLObject
 
# When zope mode is activated, add a predefined set of Zope acquired attributes
# to generated-members.
zope=no
 
# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E0201 when accessed.
generated-members=REQUEST,acl_users,aq_parent
 
 
# checks for :
# * doc strings
# * modules / classes / functions / methods / arguments / variables name
# * number of arguments, local variables, branchs, returns and statements in
# functions, methods
# * required module attributes
# * dangerous default values as arguments
# * redefinition of function / method / class
# * uses of the global statement
# 
[BASIC]
 
# Required attributes for module, separated by a comma
required-attributes=
 
# Regular expression which should only match functions or classes name which do
# not require a docstring
no-docstring-rgx=__.*__
 
# Regular expression which should only match correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$
 
# Regular expression which should only match correct module level names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$
 
# Regular expression which should only match correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$
 
# Regular expression which should only match correct function names
function-rgx=[a-z_][a-z0-9_]{2,30}$
 
# Regular expression which should only match correct method names
method-rgx=[a-z_][a-z0-9_]{2,30}$
 
# Regular expression which should only match correct instance attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$
 
# Regular expression which should only match correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$
 
# Regular expression which should only match correct variable names
variable-rgx=[a-z_][a-z0-9_]{1,30}$
 
# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$
 
# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,e,ex,Run,_
 
# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata
 
# List of builtins function names that should not be used, separated by a comma
bad-functions=map,filter,apply,input
 
 
# checks for
# * external modules dependencies
# * relative / wildcard imports
# * cyclic imports
# * uses of deprecated modules
# 
[IMPORTS]
 
# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,string,TERMIOS,Bastion,rexec
 
# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report R0402 must not be disabled)
import-graph=
 
# Create a graph of external dependencies in the given file (report R0402 must
# not be disabled)
ext-import-graph=
 
# Create a graph of internal dependencies in the given file (report R0402 must
# not be disabled)
int-import-graph=
 
 
# checks for sign of poor/misdesign:
# * number of methods, attributes, local variables...
# * size, complexity of functions, methods
# 
[DESIGN]
 
# Maximum number of arguments for function / method
max-args=5
 
# Maximum number of locals for function / method body
max-locals=15
 
# Maximum number of return / yield for function / method body
max-returns=6
 
# Maximum number of branch for function / method body
max-branchs=12
 
# Maximum number of statements in function / method body
max-statements=50
 
# Maximum number of parents for a class (see R0901).
max-parents=7
 
# Maximum number of attributes for a class (see R0902).
max-attributes=7
 
# Minimum number of public methods for a class (see R0903).
min-public-methods=2
 
# Maximum number of public methods for a class (see R0904).
max-public-methods=20
 
 
# checks for :
# * methods without self as first argument
# * overridden methods signature
# * access only to existant members via self
# * attributes not defined in the __init__ method
# * supported interfaces implementation
# * unreachable code
# 
[CLASSES]
 
# List of interface methods to ignore, separated by a comma. This is used for
# instance to not check methods defines in Zope's Interface base class.
ignore-iface-methods=isImplementedBy,deferred,extends,names,namesAndDescriptions,queryDescriptionFor,getBases,getDescriptionFor,getDoc,getName,getTaggedValue,getTaggedValueTags,isEqualOrExtendedBy,setTaggedValue,isImplementedByInstancesOf,adaptWith,is_implemented_by
 
# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp
 
 
# checks for :
# * unauthorized constructions
# * strict indentation
# * line length
# * use of <> instead of !=
# 
[FORMAT]
 
# Maximum number of characters on a single line.
max-line-length=78
 
# Maximum number of lines in a module
max-module-lines=1000
 
# String used as indentation unit. This is usually " " (4 spaces) or "\t" (1
# tab).
indent-string='    '
 
 
# checks for similarities and duplicated code. This computation may be
# memory / CPU intensive, so you should disable it if you experiments some
# problems.
# 
[SIMILARITIES]
 
# Minimum lines number of a similarity.
min-similarity-lines=4
 
# Ignore comments when computing similarities.
ignore-comments=yes
 
# Ignore docstrings when computing similarities.
ignore-docstrings=yes
 
 
# checks for:
# * warning notes in the code like FIXME, XXX
# * PEP 263: source code with non ascii character but no encoding declaration
# 
[MISCELLANEOUS]
 
# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO
